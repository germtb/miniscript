import { map } from 'List'
import { log, pipeLog } from 'Debug'
import { Nothing } from 'Debug'

keys = object => internalKeys(object)

values = object => object
	|> keys
	|> map(get(object: object))

entries = object => object
	|> keys
	|> map(k => [k, get(k, object)])

get = (key, object) => internalGet(object, key)

contains = (key, object) => match object |> get(key)
  | { type: 'Nothing' } -> false
  | _ -> true

insert = (key, value, object) => {
  ...object,
  #key: value
}

module = {
  get,
  keys,
  values,
  entries
}
